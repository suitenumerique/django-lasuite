"""Test the malware detection handler."""

import pytest
from django.core.exceptions import ImproperlyConfigured

from lasuite.malware_detection.backends.dummy import DummyBackend
from lasuite.malware_detection.handler import MalwareDetectionHandler


def test_malware_detection_handler_from_settings(settings):
    """Test the malware detection handler from the settings."""
    settings.MALWARE_DETECTION = {
        "BACKEND": "lasuite.malware_detection.backends.dummy.DummyBackend",
        "PARAMETERS": {
            "callback_path": "tests.malware_detection.backends.test_dummy_backend.dummy_callback",
        },
    }
    handler = MalwareDetectionHandler()
    assert isinstance(handler(), DummyBackend)
    assert handler().callback_path == "tests.malware_detection.backends.test_dummy_backend.dummy_callback"


def test_malware_detection_handler_from_backend(settings):
    """Test the malware detection handler from the backend."""
    handler = MalwareDetectionHandler(
        backend={
            "BACKEND": "lasuite.malware_detection.backends.dummy.DummyBackend",
            "PARAMETERS": {
                "callback_path": "tests.malware_detection.backends.test_dummy_backend.dummy_callback",
            },
        }
    )
    assert isinstance(handler(), DummyBackend)
    assert handler().callback_path == "tests.malware_detection.backends.test_dummy_backend.dummy_callback"


def test_malware_detection_backend_no_config(settings):
    """Test the malware detection handler when no config set should raise an error."""
    settings.MALWARE_DETECTION = None
    handler = MalwareDetectionHandler()
    with pytest.raises(ImproperlyConfigured):
        handler()
